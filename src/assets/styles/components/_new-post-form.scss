@use "./texteditor";
@use "./login-form";
@use "../abstracts/" as *;
.new-post-form {
  @include respond-to("l") {
    display: grid;
    grid-template-columns: 35% 1fr;
    gap: 10px;
  }
}

.new-post-form-label {
  @extend .login-label;
  &--main {
    @extend .new-post-form-label;
    font-size: $font-ml;
    font-weight: 700;
  }
  &--texteditor {
    @extend .new-post-form-label;
    font-size: $font-ml;
    font-weight: 700;
    margin-bottom: 0;
  }
}

.texteditor--new-post {
  flex-grow: 1;
}
.textarea--new-post {
  @extend .texteditor-textarea;
  height: auto;
  font-weight: 400;
  @include respond-to("l") {
    min-height: 50vh;
  }
}

.new-post-form-data {
  flex-grow: 1;
  @include respond-to("l") {
    flex-grow: 0;
  }
}

.new-post-form-input {
  @extend .login-input;
}
// for autogrowing the text area
.grow-wrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: grid;
  &:focus {
    border: 2px solid;
  }
  @include respond-to("l") {
    min-height: 50vh;
  }
}

.grow-wrap::after {
  /* Note the weird space! Needed to preventy jumpy behavior */
  content: attr(data-replicated-value) " ";

  /* This is how textarea text behaves */
  white-space: pre-wrap;

  /* Hidden from view, clicks, and screen readers */
  visibility: hidden;
  overflow: hidden;
}

.grow-wrap > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  resize: none;

  /* Firefox shows scrollbar on growth, you can hide like this. */
}
.grow-wrap > textarea,
.grow-wrap::after {
  /* Identical styling required!! */

  font: inherit;

  /* Place on top of each other */
  grid-area: 1 / 1 / 2 / 2;
}
